version: "3"
services:
    #PHP Service
    todo-api:
        build:
            context: .
            dockerfile: Dockerfile
        image: digitalocean.com/php
        container_name: todo-api
        restart: always
        tty: true
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            APP_KEY: base64:TPTxTtLRf5q57od1Q3hUCazPEZMxPyxHwf6uv+5q7PU=
            SERVICE_NAME: todo-api
            DB_CONNECTION: mysql
            DB_HOST: todo-db
            DB_DATABASE: todo-db
            DB_PASSWORD: passwd
            DB_PORT: 3306
            DB_USERNAME: root
            APP_ENV: local
            APP_DEBUG: "true"
            MAIL_MAILER: "smtp"
            MAIL_HOST: sandbox.smtp.mailtrap.io
            MAIL_PORT: 2525
            MAIL_USERNAME: b8224905db765f
            MAIL_PASSWORD: 70ef01cd88a5a8
            MAIL_ENCRYPTION: tls
            MAIL_FROM_ADDRESS: laravel@test.com
            MAIL_FROM_NAME: "${APP_NAME}"
            SANCTUM_STATEFUL_DOMAINS: "http://localhost:3000/"
        volumes:
            - ./:/var/www
            - ./php.ini:/usr/local/etc/php/conf.d/local.ini
        ports:
            - 8012:80
        networks:
            - todo-network
        command: bash -c "
            (composer install || true) &&
            (php artisan migrate:fresh --seed|| true) &&
            (php artisan config:cache || true) &&
            (php artisan route:clear || true)  &&
            (nginx -t && nginx) &&
            php-fpm "

    todo-db:
        image: mysql:5.7.22
        container_name: todo-db
        restart: unless-stopped
        tty: true
        ports:
            - "33030:3306"
        environment:
            MYSQL_DATABASE: todo-db
            MYSQL_ROOT_PASSWORD: "passwd"
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/www
            - ./dockerfiles/nginx:/etc/nginx/conf.d
        networks:
            - todo-network

#Docker Networks
networks:
    todo-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
